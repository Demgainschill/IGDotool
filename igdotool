#!/bin/bash

## igdotool will extract links from saved posts some requirements are as follows 
## Browser must be a 1920x1080p resolution screen 
## Screen zoom must be defaulted to 67%
## User must be signed in already
## User must already be on the saved page and have the screen zoom at 67%

declare -i maxnoposts
#default filename iglinks 
filename="iglinks"
declare -i tasks


igxclipping(){	

maxnoposts="${1}"
xdotool keydown Alt key Tab keyup Alt
xdotool mousemove 855 335
sleep 0.5
xdotool click 1
xdotool mousemove 1358 185
sleep 0.5
xdotool click 1
xdotool mousemove 957 610
sleep 0.5
xdotool click 1
xdotool keydown Alt key Tab keyup Alt
xclip -selection clipboard -o >> iglinks && echo >> iglinks
sleep 0.5
xdotool keydown Alt key Tab keyup Alt
## start with a loop 
eval "for i in {1..$maxnoposts}; do
xdotool mousemove 1896 606
xdotool click 1
xdotool mousemove 855 335
sleep 0.5
xdotool click 1
xdotool mousemove 1358 185
sleep 0.5
xdotool click 1
xdotool mousemove 957 610
sleep 0.5
xdotool click 1
xdotool keydown Alt key Tab keyup Alt
xclip -selection clipboard -o >> iglinks && echo >> iglinks
sleep 0.5
xdotool keydown Alt key Tab keyup Alt
done"
}

usage(){
	echo << EOF
	-n [int] : Number of posts to copy links from to ( default : iglinks file ) 
	-h 	 : Displaying usage section of igdotool
	-x [ parallel tasks] : Extracting posts from iglinks file using xargs and wget ( higher parallel tasks faster downloads ))
EOF
}

extractor(){
	filename="$1"
	tasks="$2"
	if [[ -n $(which yt-dlp) ]]; then 
		echo "wget installed" 
	else
		apt-get install yt-dlp
		if [[ $? -eq 0 ]];
		then 
			echo "wget installed successfully"
		else
			echo "errors encountered exiting"
			exit 1
		fi
	fi
	
	if [[ -n $(which xargs) ]];then
		echo 'echo xargs exists'
	else
		echo "installing xargs"
		apt-get install xargs 
		if [[ $? -eq 0 ]];then
			'xargs installed successfully'
		else
			echo "encountered problems downloading xargs"
			exit 1
		fi
	fi
	
       	if [[ -f $filename ]] && [[ -n $filename ]]; then 
		echo $filename exists and contains links
		echo "extracting and downloading links using parallely"
		cat $filename | xargs -n 1 -I {} -P $tasks yt-dlp {}
		if [[ $? -eq 0 ]]; then
			echo "all ig posts have been extracted"
		else
			echo "Errors encountered while extracting..."
			echo "Exiting..." 
			exit 1
		fi
	else
		echo "file does not exist"
		echo "Please run igdotool with -n [int]	and also modify default filename param"
		echo "Exiting.... see -h for usage"
		exit 1
	fi
		
}	
while getopts ":hn:x:" OPTS; do
	case "$OPTS" in
		n)
			maxnoposts="${OPTARG}"
			if echo $maxnoposts | grep -Ei '^[0-9]+$'; then 
				echo "$maxnoposts is an integer"
				igxclipping "$maxnoposts"
			else
				echo "$maxnoposts is not an integer exiting..."
				exit 1
			fi	
			
			;;
		h)
			usage
			;;
			
		x)
			if [[ -f "$filename" ]] && [[ -n "$filename" ]]; then
				tasks=${OPTARG}
				echo "file exists"
				echo "Proceeding with extracting of links from $filename"
					
				if [[ -n $tasks ]]; then
					extractor "$filename" "$tasks"
				else
					echo "$tasks is not a valid integer"
				fi
			else
				echo "File not found run the tool with -n [int] option first"
				exit 1
				fi

			
			;;
		\?)
			echo "Invalid option"
			exit 1
			;;
		:)
			echo "Requires argument"
			exit 1
			;;
	esac
done

if [[ ! -n $1 ]]; then
	usage
	exit 1
fi

shift $((OPTIND-1))

if [[ $# -ge 1 ]]; then 
	echo "Too many arguments. Exiting..."
	usage
	exit 1
fi 

